{
 "Resources": {
  "myBastionInstanceSecurityGroupAD76EC90": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2/myBastion/Resource/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Internet access SSH",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "myBastionHostLinux"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCB9E5F0B4BD23A326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myBastion/Resource/InstanceSecurityGroup/Resource"
   }
  },
  "myBastionInstanceRole80686C0E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "myBastionHostLinux"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myBastion/Resource/InstanceRole/Resource"
   }
  },
  "myBastionInstanceRoleDefaultPolicy1F13358F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2messages:*",
        "ssm:UpdateInstanceInformation",
        "ssmmessages:*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "myBastionInstanceRoleDefaultPolicy1F13358F",
    "Roles": [
     {
      "Ref": "myBastionInstanceRole80686C0E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myBastion/Resource/InstanceRole/DefaultPolicy/Resource"
   }
  },
  "myBastionInstanceProfileCE4FD19D": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "myBastionInstanceRole80686C0E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myBastion/Resource/InstanceProfile"
   }
  },
  "myBastion25A2B620": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "myBastionInstanceProfileCE4FD19D"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "myBastionInstanceSecurityGroupAD76EC90",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCPublicSubnet1SubnetB4246D30D84F935B"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "myBastionHostLinux"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "myBastionInstanceRoleDefaultPolicy1F13358F",
    "myBastionInstanceRole80686C0E"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myBastion/Resource/Resource"
   }
  },
  "myALB18A49813": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "myALB",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "myALBSecurityGroupF245F258",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCPublicSubnet1SubnetB4246D30D84F935B"
     },
     {
      "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCPublicSubnet2Subnet74179F3969CC10AD"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myALB/Resource"
   }
  },
  "myALBSecurityGroupF245F258": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB cdkec2myALBD2D7092E",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Internet access ALB 8000",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 8000",
      "FromPort": 8000,
      "IpProtocol": "tcp",
      "ToPort": 8000
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCB9E5F0B4BD23A326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myALB/SecurityGroup/Resource"
   }
  },
  "myALBSecurityGrouptocdkec2myASGInstanceSecurityGroup26DB0856800091C7DA8F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "myALBSecurityGroupF245F258",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "ALB access 8000 port of EC2 in Autoscaling Group",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "myASGInstanceSecurityGroup77B88BA5",
      "GroupId"
     ]
    },
    "FromPort": 8000,
    "ToPort": 8000
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myALB/SecurityGroup/to cdkec2myASGInstanceSecurityGroup26DB0856:8000"
   }
  },
  "myALBmy8000F4857180": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "myALBmy8000addTargetGroupGroup5188F666"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "myALB18A49813"
    },
    "Port": 8000,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myALB/my8000/Resource"
   }
  },
  "myALBmy8000addTargetGroupGroup5188F666": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 8000,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCB9E5F0B4BD23A326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myALB/my8000/addTargetGroupGroup/Resource"
   }
  },
  "Ec2Role2FD9A272": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Give access to the apps on our EC2 instances",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/Ec2Role/Resource"
   }
  },
  "myASGInstanceSecurityGroup77B88BA5": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2/myASG/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "cdk-ec2/myASG"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCB9E5F0B4BD23A326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myASG/InstanceSecurityGroup/Resource"
   }
  },
  "myASGInstanceSecurityGroupfromcdkec2myALBSecurityGroup3D5441668000552490AE": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "ALB access 8000 port of EC2 in Autoscaling Group",
    "FromPort": 8000,
    "GroupId": {
     "Fn::GetAtt": [
      "myASGInstanceSecurityGroup77B88BA5",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "myALBSecurityGroupF245F258",
      "GroupId"
     ]
    },
    "ToPort": 8000
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myASG/InstanceSecurityGroup/from cdkec2myALBSecurityGroup3D544166:8000"
   }
  },
  "myASGInstanceProfile053766AB": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "Ec2Role2FD9A272"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myASG/InstanceProfile"
   }
  },
  "myASGLaunchConfigA0CD8C73": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "IamInstanceProfile": {
     "Ref": "myASGInstanceProfile053766AB"
    },
    "KeyName": "kp-ireland",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "myASGInstanceSecurityGroup77B88BA5",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash \n#\n#\nyum install -y git tmux \nsudo -u ec2-user -i <<'EOF'\ncurl \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\"curl \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\"\npython3 get-pip.py\ncd /home/ec2-user/\n# aws s3 sync s3://monday-gs-999/app/ /home/ec2-user/app/ \ngit clone https://github.com/kol999/ec2-flask.git\ncd /home/ec2-user/ec2-flask\npip3 install -r requirements.txt \npython3 app.py\nEOF"
    }
   },
   "DependsOn": [
    "Ec2Role2FD9A272"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myASG/LaunchConfig"
   }
  },
  "myASG6C9F5AC0": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "2",
    "MinSize": "2",
    "DesiredCapacity": "2",
    "LaunchConfigurationName": {
     "Ref": "myASGLaunchConfigA0CD8C73"
    },
    "Tags": [
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "cdk-ec2/myASG"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "myALBmy8000addTargetGroupGroup5188F666"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCPrivateSubnet1Subnet8BCA10E01F79A1B7"
     },
     {
      "Fn::ImportValue": "cdk-vpc:ExportsOutputRefVPCPrivateSubnet2SubnetCFCDAA7AB22CF85D"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myASG/ASG"
   }
  },
  "myASGScalingPolicycpuscaling2AAC6C9F": {
   "Type": "AWS::AutoScaling::ScalingPolicy",
   "Properties": {
    "AutoScalingGroupName": {
     "Ref": "myASG6C9F5AC0"
    },
    "PolicyType": "TargetTrackingScaling",
    "TargetTrackingConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ASGAverageCPUUtilization"
     },
     "TargetValue": 50
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/myASG/ScalingPolicycpu_scaling/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VR32+CMBD+W3yvXdAse55mmSYkI+D7cpaCN0tL2us2QvjfV0AR59P1+3F3/doVf3nm0QJ+3FLk56XCI28zAnFmgfpspVjxdgOO0OidcRSj9r9srx2BFpJlUniL1Lxb42u2LfQDMVn/i2+llc490Hs98B1DqHibGjV0DjUxCkXTw9vpOj6xpkAlOyZVf1mhDORHUEFCXX6HDK91HXqgzxEHbTNo0vYz7vDch46kvniu55l+AFtKmpLOYMfAk3ECVNgedgeQjWByx+C1OG2NLrD0dpjX0w/WcerBhh8J3EW65b8juo6l0hlvx+f+8FR7Gt4LLFSSxihzS9ifY7+7Y0lDJ6Of1jyK+Hrx5RCX1mvCSvJ0rH/mEyzNKwIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "myBastionBastionHostIdF36DDFD3": {
   "Description": "Instance ID of the bastion host. Use this to connect via SSM Session Manager",
   "Value": {
    "Ref": "myBastion25A2B620"
   }
  },
  "ALBDNS": {
   "Value": {
    "Fn::GetAtt": [
     "myALB18A49813",
     "DNSName"
    ]
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}